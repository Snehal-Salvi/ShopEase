import { createSlice } from '@reduxjs/toolkit';

// Create a slice for managing the shopping cart state
const cartSlice = createSlice({
  name: 'cart', // Name of the slice
  initialState: {
    items: [], // Initial state: an array to hold cart items
  },
  reducers: {
    addToCart: (state, action) => { // Reducer function to add an item to the cart
      const newItem = action.payload; // Extract the new item data from the action payload
      const existingItemIndex = state.items.findIndex(item => item.id === newItem.id); // Find if the item already exists in the cart

      if (existingItemIndex !== -1) { // If the item already exists in the cart
        state.items[existingItemIndex].quantity += 1; // Increase the quantity of the existing item
      } else { // If the item does not exist in the cart
        state.items.push({ ...newItem, quantity: 1 }); // Add the new item with a quantity of 1 to the cart
      }
    },
    removeFromCart: (state, action) => { // Reducer function to remove an item from the cart
      const itemId = action.payload; // Extract the item ID from the action payload
      state.items = state.items.filter(item => item.id !== itemId); // Filter out the item with the specified ID from the cart
    },
    clearCart: (state) => { // Reducer function to clear all items from the cart
      state.items = []; // Reset the cart items array to an empty array
    },
  },
});

// Export action creators generated by createSlice
export const { addToCart, removeFromCart, clearCart } = cartSlice.actions;

// Export the reducer function to be used in the Redux store
export default cartSlice.reducer;
